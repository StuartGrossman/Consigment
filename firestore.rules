rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // ======================================
    // USER-SIDE COLLECTIONS (User Access)
    // ======================================

    // Users collection - users can read/write their own profile, admins can read all
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      allow read, update: if isAdmin();
    }

    // User's personal items (drafts, pending items they created)
    match /userItems/{userId}/items/{itemId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin(); // Admins can view user items
    }

    // User's cart data
    match /userCarts/{userId} {
      allow read, write: if isOwner(userId);
    }

    // User's bookmarks
    match /userBookmarks/{userId} {
      allow read, write: if isOwner(userId);
    }

    // User's action history (personal logs)
    match /userActions/{userId}/actions/{actionId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin(); // Admins can view user actions for support
    }

    // User's purchase history (personal copy)
    match /userPurchases/{userId}/orders/{orderId} {
      allow read, write: if isOwner(userId);
      allow read: if isAdmin(); // Admins can view for customer service
    }

    // ======================================
    // PUBLIC COLLECTIONS (Controlled Access)
    // ======================================

    // Live items - public read, server-only write
    match /items/{itemId} {
      // Anyone can read live items
      allow read: if resource.data.status == 'live';
      // Item creators can read their own items regardless of status
      allow read: if isAuthenticated() && resource.data.sellerId == request.auth.uid;
      // Admins can read all items
      allow read: if isAdmin();
      
      // Only server (Firebase Admin SDK) can write to items
      // This prevents users from marking items as sold or changing prices
      allow write: if false; // All writes handled by server
    }

    // ======================================
    // ADMIN-ONLY COLLECTIONS
    // ======================================

    // Pending items awaiting admin approval
    match /pendingItems/{itemId} {
      allow read, write: if isAdmin();
    }

    // Admin action logs
    match /adminActions/{actionId} {
      allow read, write: if isAdmin();
    }

    // Sales records - SERVER ONLY (created by payment processing)
    match /sales/{saleId} {
      // Users can read their own sales
      allow read: if isAuthenticated() && 
                     (resource.data.sellerId == request.auth.uid || 
                      resource.data.buyerId == request.auth.uid);
      // Admins can read all sales
      allow read: if isAdmin();
      // Only server can create/update sales
      allow write: if false;
    }

    // Orders - SERVER ONLY (created by payment processing)
    match /orders/{orderId} {
      // Users can read their own orders
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Admins can read all orders
      allow read: if isAdmin();
      // Only server can create/update orders
      allow write: if false;
    }

    // Store credits - SERVER ONLY
    match /store_credits/{creditId} {
      // Users can read their own credits
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Admins can read all credits
      allow read: if isAdmin();
      // Only server can create/update credits
      allow write: if false;
    }

    // Store credit transactions - SERVER ONLY
    match /store_credit_transactions/{transactionId} {
      // Users can read their own transactions
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      // Admins can read all transactions
      allow read: if isAdmin();
      // Only server can create/update transactions
      allow write: if false;
    }

    // Refunds - ADMIN ONLY
    match /refunds/{refundId} {
      allow read, write: if isAdmin();
    }

    // Payments - ADMIN ONLY
    match /payments/{paymentId} {
      allow read, write: if isAdmin();
    }

    // ======================================
    // LEGACY/COMPATIBILITY COLLECTIONS
    // ======================================

    // Action logs - for backward compatibility, but prefer userActions
    match /actionLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Test collection - for development only
    match /test/{testId} {
      allow read, write: if isAuthenticated();
    }

    // ======================================
    // ADMIN ANALYTICS COLLECTIONS
    // ======================================

    // Performance metrics - admin only
    match /performance_metrics/{metricId} {
      allow read, write: if isAdmin();
    }

    // Application performance data - admin only  
    match /application_performance/{perfId} {
      allow read, write: if isAdmin();
    }

    // Security test results - admin only
    match /security_tests/{testId} {
      allow read, write: if isAdmin();
    }

    // Test performance runs - admin only
    match /test_performance_runs/{runId} {
      allow read, write: if isAdmin();
    }

    // Test results and analytics - admin only
    match /test_results/{resultId} {
      allow read, write: if isAdmin();
    }

    // Feature test data - admin only
    match /feature_tests/{testId} {
      allow read, write: if isAdmin();
    }

    // Rate limiting and security collections
    match /banned_ips/{ipId} {
      allow read, write: if isAdmin();
    }

    match /banned_users/{userId} {
      allow read, write: if isAdmin();
    }

    match /rate_limit_violations/{violationId} {
      allow read, write: if isAdmin();
    }

    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 